{"version":3,"sources":["Components/Board/Field.js","Components/GameFlow/GameStart.js","gameLogic.js","Components/GameFlow/GameStatus.js","Components/GameFlow/GameContinue.js","Components/GameFlow/GameEnd.js","Components/GameFlow/GameOver.js","Components/Board/GameBar.js","Components/Board/VerdictModal.js","Components/Board/PlayerButton.js","Components/GameFlow/GameRestart.js","Components/Reducer/actions.js","Components/Reducer/initialState.js","boardLogic.js","Components/Reducer/reducer.js","Components/Board/Board.js","App.js","reportWebVitals.js","index.js"],"names":["Field","index","onClick","value","fieldValueClass","boardSize","Paper","elevation","className","GameStart","X","O","TIE","GameStatus","gamerTurn","verdict","GameContinue","handleClickContinueGame","disabled","status","Button","variant","color","GameEnd","handleClickEndGame","GameOver","finalVerdict","gamer1Score","gamer2Score","calculateFinalVerdict","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","GameBar","classes","AppBar","position","Typography","title","React","memo","customStyles","overlay","top","content","left","right","bottom","transform","padding","VerdictModal","isOpen","style","ariaHideApp","PlayerButton","GameRestart","handleClickRestartGame","ACTIONS","initialState","startGame","gamer1Started","continueGameActive","endGame","boardFields","Array","fill","gamer1Turn","modalIsOpen","boardLogic","winnerLines","createBoardLogic","N","horizontalLines","from","row","col","calculateHorizontalWinnerLines","calculateWinnerLines","verticalWinnerLines","calculateVerticalWinnerLines","diagonal1WinnerLines","diagonal2WinnerLines","acc","calculateDiagonalWinnerLines","createInitialBoard","reducer","state","action","type","payload","Board","useReducer","dispatch","useState","setBoardFields","setGamer1Turn","useEffect","winner","i","length","arr","reduce","a","b","NaN","calculateWinner","tie","includes","isAllFieldsOccupied","calculateVerdict","handleClickField","useCallback","oldBoardFields","newFields","handleClickGamerPicked","gamer","noValidate","autoComplete","TextField","id","label","onChange","event","parseInt","target","gridTemplateColumns","map","boardField","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b867ffb0.chunk.js","sourcesContent":["import React from \"react\"\nimport Paper from \"@material-ui/core/Paper\"\n\nconst Field = ({ index, onClick, value, boardSize }) => {\n  const fieldValueClass = boardSize >= 10 ? \"field-value small\" : \"field-value\"\n  return (\n    <div>\n      <Paper\n        elevation={3}\n        className=\"field\"\n        onClick={() => onClick(index, value)}\n      >\n        <div className={fieldValueClass}>{value}</div>\n      </Paper>\n    </div>\n  )\n}\n\nexport default Field\n","import React from \"react\"\nconst GameStart = () => {\n  return (\n    <div className=\"game-info\">\n      <h2 className=\"game-info-title\">Welcome</h2>\n    </div>\n  )\n}\n\nexport default GameStart\n","const X = \"X\"\nconst O = \"O\"\nconst TIE = \"TIE\"\n\nfunction calculateWinner(boardFields, winnerLines, boardSize) {\n  for (let i = 0; i < winnerLines.length; i++) {\n    const arr = winnerLines[i]\n    let acc = []\n    for (let i = 0; i < arr.length; i++) {\n      acc[i] = boardFields[arr[i]]\n    }\n    if (\n      acc.reduce(function (a, b) {\n        return a === b ? a : NaN\n      }) &&\n      acc[0] !== null\n    ) {\n      return acc[0]\n    } else {\n      if (i === winnerLines.length - 1) {\n        return null\n      }\n    }\n  }\n}\n\nfunction isAllFieldsOccupied(boardFields) {\n  return !boardFields.includes(null)\n}\n\nfunction calculateVerdict(boardFields, winnerLines, boardSize) {\n  const winner = calculateWinner(boardFields, winnerLines, boardSize)\n  const tie = winner === null && isAllFieldsOccupied(boardFields)\n  if (winner !== null || tie) {\n    if (tie) {\n      return TIE\n    } else {\n      return winner\n    }\n  }\n  return null\n}\n\nfunction calculateFinalVerdict(gamer1Score, gamer2Score) {\n  if (gamer1Score > gamer2Score) {\n    return X\n  } else if (gamer2Score > gamer1Score) {\n    return O\n  } else return TIE\n}\n\nexport { calculateVerdict, calculateWinner, calculateFinalVerdict, X, O, TIE }\n","import React from \"react\"\n\nconst GameStatus = ({ gamerTurn, verdict }) => {\n  return (\n    <div className=\"game-status\">\n      {!verdict ? (\n        <div>\n          Your turn: <span>{gamerTurn}</span>\n        </div>\n      ) : (\n        <div>The winner: {verdict}</div>\n      )}\n    </div>\n  )\n}\n\nexport default GameStatus\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\n\nconst GameContinue = ({ handleClickContinueGame, status }) => {\n  const disabled = !status\n\n  return (\n    <Button\n      className=\"game-flow-btn\"\n      disabled={disabled}\n      variant=\"outlined\"\n      color=\"primary\"\n      onClick={handleClickContinueGame}\n    >\n      Next round\n    </Button>\n  )\n}\n\nexport default GameContinue\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\n\nconst GameEnd = ({ handleClickEndGame }) => {\n  return (\n    <Button\n      className=\"game-flow-btn\"\n      variant=\"outlined\"\n      color=\"primary\"\n      onClick={handleClickEndGame}\n    >\n      Finish Game\n    </Button>\n  )\n}\n\nexport default GameEnd\n","import React from \"react\"\nimport { calculateFinalVerdict, TIE } from \"../../gameLogic\"\n\nconst GameOver = ({ gamer1Score, gamer2Score }) => {\n  const finalVerdict = calculateFinalVerdict(gamer1Score, gamer2Score)\n  return (\n    <div className=\"game-info\">\n      <div className=\"game-info-title game-over-info\">Game Over</div>\n      <div className=\"game-info-title game-over-verdict\">\n        The winner: <span>{finalVerdict}</span>\n      </div>\n      <div className=\"game-info-title game-over-congrat\">\n        {finalVerdict !== TIE ? \"Congratulations!\" : \"Try next time!\"}\n      </div>\n    </div>\n  )\n}\n\nexport default GameOver\n","import React from \"react\"\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport AppBar from \"@material-ui/core/AppBar\"\nimport Typography from \"@material-ui/core/Typography\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n}))\n\nconst GameBar = ({ gamer1Score, gamer2Score }) => {\n  const classes = useStyles()\n  return (\n    <div>\n      <AppBar position=\"static\">\n        <Typography variant=\"h6\" className={classes.title}>\n          Tic tac toe\n        </Typography>\n        <div className=\"score-board\">\n          <div className=\"score-board-item\">Gamer X: {gamer1Score}</div>\n          <div className=\"score-board-item\">Gamer O: {gamer2Score}</div>\n        </div>\n      </AppBar>\n    </div>\n  )\n}\n\nexport default React.memo(GameBar)\n","import React from \"react\"\nimport Modal from \"react-modal\"\n\nconst customStyles = {\n  overlay: {\n    top: \"243px\",\n  },\n  content: {\n    top: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n    padding: \"0\",\n  },\n}\n\nconst VerdictModal = ({ isOpen }) => {\n  return <Modal style={customStyles} isOpen={isOpen} ariaHideApp={false} />\n}\n\nexport default VerdictModal\n","import React from \"react\"\nimport Paper from \"@material-ui/core/Paper\"\n\nconst PlayerButton = ({ onClick, value }) => {\n  return (\n    <Paper elevation={3} className=\"player-btn\" onClick={onClick}>\n      {value}\n    </Paper>\n  )\n}\n\nexport default PlayerButton\n","import React from \"react\"\nimport Button from \"@material-ui/core/Button\"\n\nconst GameRestart = ({ handleClickRestartGame }) => {\n  return (\n    <Button\n      className=\"game-flow-btn\"\n      variant=\"outlined\"\n      color=\"primary\"\n      onClick={handleClickRestartGame}\n    >\n      Restart Game\n    </Button>\n  )\n}\n\nexport default GameRestart\n","const ACTIONS = {\n  SET_START_GAME: \"setStartGame\",\n  SET_GAMER1_STARTED: \"setGamer1Started\",\n  SET_CONTINUE_GAME_ACTIVE: \"setContinueGameActive\",\n  SET_END_GAME: \"setEndGame\",\n  SET_VERDICT: \"setVerdict\",\n  SET_GAMER1_SCORE: \"setGamer1Score\",\n  SET_GAMER2_SCORE: \"setGamer2Score\",\n  SET_MODAL_IS_OPEN: \"setModalIsOpen\",\n  SET_BOARD_SIZE: \"setBoardSize\",\n  SET_BOARD_LOGIC: \"setBoardLogic\",\n  SET_WINNER_LINES: \"setWinnerLines\",\n}\n\nexport { ACTIONS }\n","const initialState = {\n  startGame: false,\n  gamer1Started: true,\n  continueGameActive: false,\n  endGame: false,\n  boardFields: Array(9).fill(null),\n  gamer1Turn: true,\n  verdict: null,\n  gamer1Score: 0,\n  gamer2Score: 0,\n  modalIsOpen: false,\n  boardSize: 3,\n  boardLogic: null,\n  winnerLines: [],\n}\n\nexport { initialState }\n","function createBoardLogic(N) {\n  const horizontalLines = calculateHorizontalWinnerLines()\n\n  function calculateWinnerLines() {\n    return [\n      ...horizontalLines,\n      ...calculateVerticalWinnerLines(horizontalLines),\n      ...calculateDiagonalWinnerLines(horizontalLines),\n    ]\n  }\n\n  function calculateHorizontalWinnerLines() {\n    const horizontalLines = createEmptyBoard()\n    let index = 0\n    for (let row = 0; row < N; row++) {\n      for (let col = 0; col < N; col++) {\n        horizontalLines[row][col] = index++\n      }\n    }\n    return horizontalLines\n  }\n\n  function calculateVerticalWinnerLines(horizontalLines) {\n    const verticalWinnerLines = Array.from(Array(N), () => new Array(N))\n    for (let row = 0; row < N; row++) {\n      for (let col = 0; col < N; col++) {\n        verticalWinnerLines[row][col] = horizontalLines[col][row]\n      }\n    }\n    return verticalWinnerLines\n  }\n\n  function calculateDiagonalWinnerLines(horizontalLines) {\n    const diagonal1WinnerLines = Array(N)\n    for (let row = 0; row < N; row++) {\n      diagonal1WinnerLines[row] = horizontalLines[row][row]\n    }\n    const diagonal2WinnerLines = Array(N)\n    let acc = N - 1\n    for (let row = 0; row < N; row++) {\n      diagonal2WinnerLines[row] = horizontalLines[row][acc]\n      acc--\n    }\n    return [diagonal1WinnerLines, diagonal2WinnerLines]\n  }\n\n  function createEmptyBoard() {\n    return Array.from(Array(N), () => new Array(N).fill(null))\n  }\n\n  function createInitialBoard() {\n    return Array.from(Array(N * N).fill(null))\n  }\n\n  return {\n    calculateWinnerLines,\n    createInitialBoard,\n  }\n}\n\nexport { createBoardLogic }\n","import { ACTIONS } from \"./actions\"\nimport { createBoardLogic } from \"../../boardLogic\"\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case ACTIONS.SET_BOARD_LOGIC:\n      return { ...state, boardLogic: createBoardLogic(state.boardSize) }\n    case ACTIONS.SET_WINNER_LINES:\n      return { ...state, winnerLines: state.boardLogic.calculateWinnerLines() }\n    case ACTIONS.SET_GAMER1_SCORE:\n      return { ...state, gamer1Score: action.payload }\n    case ACTIONS.SET_GAMER2_SCORE:\n      return { ...state, gamer2Score: action.payload }\n    case ACTIONS.SET_VERDICT:\n      return { ...state, verdict: action.payload }\n    case ACTIONS.SET_CONTINUE_GAME_ACTIVE:\n      return { ...state, continueGameActive: action.payload }\n    case ACTIONS.SET_MODAL_IS_OPEN:\n      return { ...state, modalIsOpen: action.payload }\n    case ACTIONS.SET_GAMER1_STARTED:\n      return { ...state, gamer1Started: !state.gamer1Started }\n    case ACTIONS.SET_START_GAME:\n      return { ...state, startGame: action.payload }\n    case ACTIONS.SET_BOARD_SIZE:\n      return { ...state, boardSize: action.payload }\n    case ACTIONS.SET_END_GAME:\n      return { ...state, endGame: true }\n\n    default:\n      return state\n  }\n}\n\nexport { reducer }\n","import React, { useState, useEffect, useCallback, useReducer } from \"react\"\nimport Field from \"./Field\"\nimport GameStart from \"../GameFlow/GameStart\"\nimport { calculateVerdict, X, O, TIE } from \"../../gameLogic\"\nimport GameStatus from \"../GameFlow/GameStatus\"\nimport GameContinue from \"../GameFlow/GameContinue\"\nimport GameEnd from \"../GameFlow/GameEnd\"\nimport GameOver from \"../GameFlow/GameOver\"\nimport GameBar from \"./GameBar\"\nimport VerdictModal from \"./VerdictModal\"\nimport PlayerButton from \"./PlayerButton\"\nimport GameRestart from \"../GameFlow/GameRestart\"\nimport TextField from \"@material-ui/core/TextField\"\nimport { ACTIONS } from \"../Reducer/actions\"\nimport { initialState } from \"../Reducer/initialState\"\nimport { reducer } from \"../Reducer/reducer\"\n\nconst Board = () => {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  const [boardFields, setBoardFields] = useState(Array(9).fill(null))\n  const [gamer1Turn, setGamer1Turn] = useState(true)\n\n  useEffect(() => {\n    dispatch({ type: ACTIONS.SET_BOARD_LOGIC })\n  }, [state.boardSize])\n\n  useEffect(() => {\n    if (state.boardLogic !== null) {\n      dispatch({ type: ACTIONS.SET_WINNER_LINES })\n      setBoardFields(state.boardLogic.createInitialBoard(state.boardSize))\n    }\n  }, [state.boardLogic])\n\n  useEffect(() => {\n    if (state.boardLogic) {\n      const verdict = calculateVerdict(\n        boardFields,\n        state.winnerLines,\n        state.boardSize\n      )\n      switch (verdict) {\n        case X:\n          dispatch({\n            type: ACTIONS.SET_GAMER1_SCORE,\n            payload: state.gamer1Score + 1,\n          })\n          dispatch({ type: ACTIONS.SET_VERDICT, payload: verdict })\n          dispatch({ type: ACTIONS.SET_CONTINUE_GAME_ACTIVE, payload: true })\n          dispatch({ type: ACTIONS.SET_MODAL_IS_OPEN, payload: true })\n          break\n        case O:\n          dispatch({\n            type: ACTIONS.SET_GAMER2_SCORE,\n            payload: state.gamer2Score + 1,\n          })\n          dispatch({ type: ACTIONS.SET_VERDICT, payload: verdict })\n          dispatch({ type: ACTIONS.SET_CONTINUE_GAME_ACTIVE, payload: true })\n          dispatch({ type: ACTIONS.SET_MODAL_IS_OPEN, payload: true })\n          break\n        case TIE:\n          dispatch({ type: ACTIONS.SET_VERDICT, payload: TIE })\n          dispatch({ type: ACTIONS.SET_CONTINUE_GAME_ACTIVE, payload: true })\n          dispatch({ type: ACTIONS.SET_MODAL_IS_OPEN, payload: true })\n          break\n        default:\n          return\n      }\n    }\n  }, [boardFields])\n\n  const handleClickField = useCallback((index, value) => {\n    if (value === null) {\n      setGamer1Turn((gamer1Turn) => {\n        setBoardFields((oldBoardFields) => {\n          const newFields = [...oldBoardFields]\n          newFields[index] = gamer1Turn ? X : O\n          return newFields\n        })\n        return !gamer1Turn\n      })\n    }\n  }, [])\n\n  const handleClickGamerPicked = (gamer) => {\n    if (gamer !== X) {\n      setGamer1Turn(false)\n      dispatch({ type: ACTIONS.SET_GAMER1_STARTED })\n    }\n    dispatch({ type: ACTIONS.SET_START_GAME, payload: true })\n  }\n\n  const handleClickContinueGame = () => {\n    if (state.continueGameActive) {\n      setGamer1Turn(!state.gamer1Started)\n      dispatch({ type: ACTIONS.SET_GAMER1_STARTED })\n      setBoardFields(state.boardLogic.createInitialBoard(state.boardSize))\n      dispatch({ type: ACTIONS.SET_VERDICT, payload: null })\n      dispatch({ type: ACTIONS.SET_CONTINUE_GAME_ACTIVE, payload: true })\n      dispatch({ type: ACTIONS.SET_MODAL_IS_OPEN, payload: false })\n    }\n  }\n\n  const handleClickRestartGame = () => {\n    dispatch({ type: ACTIONS.SET_START_GAME, payload: false })\n    setBoardFields(Array(9).fill(null))\n    dispatch({ type: ACTIONS.SET_GAMER1_SCORE, payload: 0 })\n    dispatch({ type: ACTIONS.SET_GAMER2_SCORE, payload: 0 })\n    dispatch({ type: ACTIONS.SET_VERDICT, payload: null })\n    dispatch({ type: ACTIONS.SET_MODAL_IS_OPEN, payload: false })\n    dispatch({ type: ACTIONS.SET_BOARD_SIZE, payload: 3 })\n  }\n\n  const handleClickEndGame = () => {\n    dispatch({ type: ACTIONS.SET_END_GAME })\n  }\n\n  const gamerTurn = gamer1Turn ? X : O\n\n  const handleChangeBoardSize = (event) => {\n    dispatch({\n      type: ACTIONS.SET_BOARD_SIZE,\n      payload: parseInt(event.target.value) || 3,\n    })\n  }\n  return (\n    <div>\n      {(!state.startGame && (\n        <div>\n          <GameStart />\n          <form noValidate autoComplete=\"off\">\n            <div className=\"form-field\">\n              <TextField\n                id=\"outlined-search\"\n                label=\"Set board size\"\n                type=\"search\"\n                variant=\"outlined\"\n                onChange={handleChangeBoardSize}\n              />\n            </div>\n          </form>\n          <h4 className=\"game-info-title\">Who is going to start?</h4>\n          <div className=\"btn-section\">\n            <PlayerButton onClick={() => handleClickGamerPicked(X)} value={X} />\n            <PlayerButton onClick={() => handleClickGamerPicked(O)} value={O} />\n          </div>\n        </div>\n      )) ||\n        (state.startGame && !state.endGame && (\n          <div>\n            <GameBar\n              gamer1Score={state.gamer1Score}\n              gamer2Score={state.gamer2Score}\n            />\n            <div className=\"game-flow-btn-section\">\n              <GameContinue\n                status={state.verdict ? true : false}\n                handleClickContinueGame={handleClickContinueGame}\n              />\n              <GameRestart handleClickRestartGame={handleClickRestartGame} />\n              <GameEnd handleClickEndGame={handleClickEndGame} />\n            </div>\n            <GameStatus gamerTurn={gamerTurn} verdict={state.verdict} />\n            <div className=\"game-board\">\n              <div\n                className=\"board\"\n                style={{\n                  gridTemplateColumns: `repeat(${state.boardSize}, 1fr)`,\n                }}\n              >\n                {boardFields.map((boardField, index) => (\n                  <Field\n                    key={index}\n                    value={boardField}\n                    index={index}\n                    onClick={handleClickField}\n                    boardSize={state.boardSize}\n                  />\n                ))}\n              </div>\n            </div>\n            <VerdictModal isOpen={state.modalIsOpen} />\n          </div>\n        )) || (\n          <GameOver\n            gamer1Score={state.gamer1Score}\n            gamer2Score={state.gamer2Score}\n          />\n        )}\n    </div>\n  )\n}\n\nexport default Board\n","import \"./App.scss\"\nimport Board from \"./Components/Board/Board\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Board />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}